			*** ELF HEADER ***ident[EI_CLASS] = 1ident[EI_DATA]  = 2ident[EI_VERS]  = 1type            = 1machine         = 04 (EM_68K)version         = 1entry           = 0x00000000phoff           = 0x00000000shoff           = 0x00000CA0flags           = 0x00000000 ( )ehsize          = 52phentsize       = 0phnum           = 0shentsize       = 40shnum           = 20shstrndx        = 3			*** SECTION HEADER TABLE ***no   offset      size        flags       addr        type        name     link        info        addralign   entsize1    0x00000040  0x00000150  0x00000000  0x00000000  SYMTAB      .symtab     2           17          0           16        2    0x00000190  0x0000012B  0x00000000  0x00000000  STRTAB      .strtab     0           0           0           0         3    0x000002C0  0x000000FF  0x00000000  0x00000000  STRTAB      .shstrtab     0           0           0           0         4    0x000003C0  0x000000F2  0x00000000  0x00000000  PROGBITS    .debug_info     0           0           0           0         5    0x000004C0  0x00000078  0x00000000  0x00000000  RELA        .rel.debug_info     1           4           0           12        6    0x00000540  0x00000000  0x00000000  0x00000000  PROGBITS    .debug_macinfo     0           0           0           0         7    0x00000540  0x00000014  0x00000000  0x00000000  PROGBITS    .debug_loc     0           0           0           0         8    0x00000560  0x00000018  0x00000000  0x00000000  RELA         rel.debug_loc     1           7           0           12        9    0x00000580  0x0000052A  0x00000000  0x00000000  PROGBITS    .debug_line     0           0           0           0         10   0x00000AB0  0x0000000C  0x00000000  0x00000000  RELA        .rel.debug_line     1           9           0           12        11   0x00000AC0  0x0000005C  0x00000000  0x00000000  PROGBITS    .debug_frame     0           0           0           0         12   0x00000B20  0x0000000C  0x00000000  0x00000000  RELA        .rel.debug_frame     1           11          0           12        13   0x00000B30  0x0000001B  0x00000000  0x00000000  PROGBITS    .debug_pubnames     0           0           0           0         14   0x00000B50  0x0000000C  0x00000000  0x00000000  RELA        .rel.debug_pubnames     1           13          0           12        15   0x00000B60  0x00000020  0x00000000  0x00000000  PROGBITS    .debug_aranges     0           0           0           0         16   0x00000B80  0x00000018  0x00000000  0x00000000  RELA        .rel.debug_aranges     1           15          0           12        17   0x00000BA0  0x0000004D  0x00000000  0x00000000  PROGBITS    .debug_abbrev     0           0           0           0         18   0x00000BF0  0x00000064  0x00000006  0x00000000  PROGBITS    .text     0           0           2           0         19   0x00000C60  0x0000003C  0x00000000  0x00000000  RELA        .rela.text     1           18          0           12        			*** SYMBOL TABLE (.symtab) ***no     value       size        bind    type     other      shndx          name1      0x00000000  0x00000000  LOCAL   SECTION  0x00       .debug_info    .debug_info2      0x00000000  0x00000000  LOCAL   SECTION  0x00       .debug_loc     .debug_loc3      0x00000000  0x00000000  LOCAL   SECTION  0x00       .debug_line    .debug_line4      0x00000000  0x00000000  LOCAL   SECTION  0x00       .debug_frame   .debug_frame5      0x00000000  0x00000000  LOCAL   SECTION  0x00       .debug_abbrev  .debug_abbrev6      0x00000000  0x00000000  LOCAL   SECTION  0x00       .debug_arange  .debug_aranges7      0x00000000  0x00000000  LOCAL   SECTION  0x00       .debug_pubnam  .debug_pubnames8      0x00000018  0x00000000  LOCAL   NOTYPE   0x00       ABS            ___ss__main9      0x000000A8  0x0000000A  LOCAL   OBJECT   0x00       .debug_info    .dwarf_type.void10     0x000000B2  0x00000009  LOCAL   OBJECT   0x00       .debug_info    .dwarf_type.int11     0x00000504  0x00000026  LOCAL   OBJECT   0x00       .debug_line    .dwarf_line._main12     0x00000044  0x00000018  LOCAL   OBJECT   0x00       .debug_frame   .dwarf_frame._main13     0x000000BB  0x00000036  LOCAL   OBJECT   0x00       .debug_info    .dwarf._main14     0x00000000  0x00000014  LOCAL   OBJECT   0x00       .debug_loc     .dwarf_loc._main15     0x0000000E  0x00000009  LOCAL   OBJECT   0x00       .debug_pubnam  .dwarf_pubnames._main16     0x00000010  0x00000008  LOCAL   OBJECT   0x00       .debug_arange  .dwarf_aranges._main17     0x00000000  0x00000064  GLOBAL  FUNC     0x00       .text          _main18     0x00000000  0x00000000  GLOBAL  NOTYPE   0x00       UNDEF          _uart_putchar19     0x00000000  0x00000000  GLOBAL  NOTYPE   0x00       UNDEF          _uart_init20     0x00000000  0x00000000  GLOBAL  NOTYPE   0x00       UNDEF          _PE_low_level_init			*** STRING TABLE (.strtab) ***0x00000000:  0x00000001:  .debug_info0x0000000D:  .debug_loc0x00000018:  .debug_line0x00000024:  .debug_frame0x00000031:  .debug_abbrev0x0000003F:  .debug_aranges0x0000004E:  .debug_pubnames0x0000005E:  _main0x00000064:  ___ss__main0x00000070:  _uart_putchar0x0000007E:  _uart_init0x00000089:  _PE_low_level_init0x0000009C:  .dwarf_type.void0x000000AD:  .dwarf_type.int0x000000BD:  .dwarf_line._main0x000000CF:  .dwarf_frame._main0x000000E2:  .dwarf._main0x000000EF:  .dwarf_loc._main0x00000100:  .dwarf_pubnames._main0x00000116:  .dwarf_aranges._main			*** STRING TABLE (.shstrtab) ***0x00000000:  0x00000001:  .symtab0x00000009:  .strtab0x00000011:  .shstrtab0x0000001B:  .debug_info0x00000027:  .rel.debug_info0x00000037:  .debug_macinfo0x00000046:  .debug_loc0x00000051:   rel.debug_loc0x00000060:  .debug_line0x0000006C:  .rel.debug_line0x0000007C:  .debug_frame0x00000089:  .rel.debug_frame0x0000009A:  .debug_pubnames0x000000AA:  .rel.debug_pubnames0x000000BE:  .debug_aranges0x000000CD:  .rel.debug_aranges0x000000E0:  .debug_abbrev0x000000EE:  .text0x000000F4:  .rela.text			*** EXECUTABLE CODE (.text) ***Address     ObjectCode        Label  Opcode   Operands              CommentSource file:          C:\Users\Benedict\workspace\MnP\test00\Sources\main.cProducer:             CodeWarrior ColdFire C/C++ Compiler;;;   39:  ;   40:  ;   41:  ;   42: void main(void) ;;   43: { ;0x00000000                    _main:;                             main:0x00000000  0x4E560000               link     a6,#00x00000004  0x4FEFFFF0               lea      -16(a7),a7;;;   44:   int counter = 0; ;   45:    ;   46:      ;   47:    ;   48:     /***** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/ ;0x00000008  0x7000                   moveq    #0,d00x0000000A  0x2D40FFFC               move.l   d0,-4(a6);;;   49:   PE_low_level_init(); /********************************************************/ ;   50:     /***** End of Processor Expert internal initialization. **********************/ ;   51:    ;   52:    ;   53:      ;   54:    #define SYSTEM_CLOCK_KHZ 80000 // System clock is 80.000.000 Hz ;0x0000000E  0x4EBA0000               jsr      _PE_low_level_init;;;   55:  uart_init(0, SYSTEM_CLOCK_KHZ, kBaud19200); ;   56:   	 ;0x00000012  0x203C00004B00           move.l   #19200,d0             ; '..K.'0x00000018  0x2F400008               move.l   d0,8(a7)0x0000001C  0x203C00013880           move.l   #80000,d0             ; '..8.'0x00000022  0x2F400004               move.l   d0,4(a7)0x00000026  0x7000                   moveq    #0,d00x00000028  0x2E80                   move.l   d0,(a7)0x0000002A  0x4EBA0000               jsr      _uart_init;;;   57:  uart_putchar(0, 'X'); ;0x0000002E  0x7058                   moveq    #88,d00x00000030  0x1F400004               move.b   d0,4(a7)0x00000034  0x7000                   moveq    #0,d00x00000036  0x2E80                   move.l   d0,(a7)0x00000038  0x4EBA0000               jsr      _uart_putchar;;;   58:  uart_putchar(0, '\r');   ;0x0000003C  0x700D                   moveq    #13,d00x0000003E  0x1F400004               move.b   d0,4(a7)0x00000042  0x7000                   moveq    #0,d00x00000044  0x2E80                   move.l   d0,(a7)0x00000046  0x4EBA0000               jsr      _uart_putchar;;;   59:  uart_putchar(0, '\n');  ;   60:    ;   61:   ;   62:    ;   63:   ;   64:   ;   65:   ;   66:   ;   67:  // Als Ende-Behandlung nachfolgend ein einfacher Leerlauf-Prozess  ;   68:  // ************************************************************** ;   69:    ;   70:    for(;;){ ;0x0000004A  0x700A                   moveq    #10,d00x0000004C  0x1F400004               move.b   d0,4(a7)0x00000050  0x7000                   moveq    #0,d00x00000052  0x2E80                   move.l   d0,(a7)0x00000054  0x4EBA0000               jsr      _uart_putchar;0x00000058  0x202EFFFC               move.l   -4(a6),d00x0000005C  0x5280                   addq.l   #1,d00x0000005E  0x2D40FFFC               move.l   d0,-4(a6);;;   70:        ;){ ;0x00000062  0x60F4                   bra.s    *-10                  ; 0x00000058			*** RELOCATIONS (.rela.text) ***no     type                  offset      addend      symbol0      R_68K_PC16            0x00000056  0x00000000  _uart_putchar1      R_68K_PC16            0x00000048  0x00000000  _uart_putchar2      R_68K_PC16            0x0000003A  0x00000000  _uart_putchar3      R_68K_PC16            0x0000002C  0x00000000  _uart_init4      R_68K_PC16            0x00000010  0x00000000  _PE_low_level_init